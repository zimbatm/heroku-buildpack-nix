#!/bin/bash
#
# Installs nix from source to the user's HOME.
#
# Only tested to work on Heroku Cedar

set -o pipefail
set -o errtrace
set -o nounset

trap 'err_handler $?' ERR

err_handler() {
  trap - ERR
  let i=0 exit_status=$1
  echo "Aborting on error $exit_status:"
  echo "--------------------"
  while caller $i; do ((i++)); done
  exit $exit_status
}

topic() {
  echo "-----> $*"
}

fetch() {
  curl -sSfL -o "$1" "$2"
}

# if [ "$HOME" != /app ]; then
  # echo FAIL, not on Cedar: $HOME
  # exit 1
# fi

BUILD_DIR=$HOME/nix-boot
NIX_ROOT=$HOME
NIX_FILE=channel:nixos-18.03

nix_options=(
  --substituters https://cache.nixos.org
  --store "$NIX_ROOT"
)

rm -rf "$BUILD_DIR"
mkdir -p "$BUILD_DIR"

topic "Bootstrapping nix"
cd "$BUILD_DIR"
fetch nix https://github.com/zimbatm/nix-bundle/releases/download/nix-bin/nix
chmod +x nix
./nix build "${nix_options[@]}" -f "$NIX_FILE" nix
./result/bin/nix-env "${nix_options[@]}" -f "$NIX_FILE" -iA nix

# topic "Fetching nixpkgs"
# nix-channel --add http://nixos.org/channels/nixpkgs-unstable
# nix-channel --update


# TODO: use a nix.conf file instead
# cat <<EOF > $HOME/.nixpkgs/config.nix
# pkgs:
# {
  # packageOverrides = self: {
    # nix = self.nix.override {
      # Replace $HOME with your actual home directory; it will not
      # be expanded for you.
      # Also, the double quotes around the path are mandatory.
      # storeDir = "\$HOME/.nix/store";
      # stateDir = "\$HOME/.nix/var";
    # };
  # };
# }
# EOF

topic "Activating nix profile"
ln -s "$NIX_ROOT/nix/var/nix/profiles/default" "$HOME/.nix-profile"
# source "$HOME/.nix-profile/etc/profile.d/nix.sh"

topic "Cleanup"
# Alright we're bootstrapped, remove that old stuff
rm -rf "$BUILD_DIR"
